name: PR build

on:
  pull_request:
    types:
      - ready_for_review
    paths:
      - src/**
      - reports/**
  workflow_dispatch:

env:
  Solution_Directory: src\AnalyticsEngine\
  Build_Platform: Any CPU
  Build_ProcessorArchitecture: x86
  ClientID: ${{ secrets.APP_CLIENTID }}
  ClientSecret: ${{ secrets.APP_CLIENTSECRET }}
  TenantGUID: ${{ secrets.APP_TENANTGUID }}
  TenantDomain: ${{ secrets.APP_TENANTDOMAIN }}
  CognitiveEndpoint: ${{ secrets.APP_COGNITIVEENDPOINT }}
  CognitiveKey: ${{ secrets.APP_COGNITIVEKEY}}
  CosmosDbTestContainerCurrent: stats
  CosmosDbTestContainerHistory: history
  CosmosDbTestDatabaseName: UnitTestDevOps
  CosmosDb: ${{ secrets.APP_COSMOSDB }}
  redis: ${{ secrets.CONNECTIONSTRINGS_REDIS }}
  ServiceBus: ${{ secrets.CONNECTIONSTRINGS_SERVICEBUS }}
  Storage: ${{ secrets.CONNECTIONSTRINGS_STORAGE }}
  SoftwareDownloadURL: ${{ secrets.SOFTWAREDOWNLOADURL }}
  StatsApiSecret: ${{ secrets.STATSAPISECRET }}
  StatsApiUrl: ${{ secrets.STATSAPIURL }}

jobs:
  build_dotnet:
    # Preparation:
    #   - Transform configuration files
    #   - Restore dependencies
    # Build:
    #   - Build .Net projects
    # Output:
    #   - Clean .Net builds
    #   - Copy PS scripts
    #   - Zip files
    #   - Publish artifacts
    runs-on: windows-latest
    strategy:
      matrix:
        configuration: [Release] # [Debug, Release]
        project:
          - name: WebJob.AppInsightsImporter
            file: WebJob.AppInsightsImporter.csproj
            outDir: AppInsightsImporter
            compressFolder: AppInsightsImporter
          - name: WebJob.Office365ActivityImporter
            file: WebJob.Office365ActivityImporter.csproj
            outDir: Office365ActivityImporter
            compressFolder: Office365ActivityImporter
          - name: Web
            file: Web.csproj
            outDir: Website
            compressFolder: Website\_PublishedWebsites\Web
          - name: App.ControlPanel
            file: App.ControlPanel.WinForms.csproj
            outDir: ControlPanelApp
            compressFolder: ControlPanelApp
    steps:
      - name: Prepare build
        id: prep
        shell: bash
        run: |
          mkdir -p "${{ env.Zips_Folder }}"
          echo "ZIPS_FOLDER=${{ env.Zips_Folder }}" >> "$GITHUB_OUTPUT"
        env:
          Zips_Folder: ${{ runner.temp }}/zips/

      - name: Checkout source
        uses: actions/checkout@v4
      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v2

      # Configuration files
      - name: Year substitution
        shell: bash
        run: |
          year=$(date +%Y)
          find ./src -name AssemblyInfo.cs | xargs sed -i "s/© __year__/© $year/"
      - name: Config substitutions
        uses: devops-actions/variable-substitution@v1.2
        with:
          files: '${{ env.Solution_Directory }}\*\App.Release.config, ${{ env.Solution_Directory }}\Web\Web.Release.config'

      # Build the project
      - name: Restore the application
        run: msbuild ${{ env.Solution_Directory }}\${{ matrix.project.name }}\${{ matrix.project.file }} -t:Restore `
          -p:Configuration=${{ matrix.configuration }} `
          -p:Platform="${{ env.Build_Platform }}" `
          -p:ProcessorArchitecture=${{ env.Build_ProcessorArchitecture }}

      - name: Build ${{ matrix.project.name }}
        run: msbuild ${{ env.Solution_Directory }}\${{ matrix.project.name }}\${{ matrix.project.file }} `
          -p:Configuration=${{ matrix.configuration }} `
          -p:Platform="${{ env.Build_Platform }}" `
          -p:ProcessorArchitecture=${{ env.Build_ProcessorArchitecture }} `
          -p:OutDir=${{ runner.temp }}\${{ matrix.project.outDir }} `
          -p:OutputPath=${{ matrix.configuration }} `
          -p:AllowedReferenceRelatedFileExtensions=none `
          -p:EmitCompilerGeneratedFiles=false

      - name: Copy Automation scripts (WebJob.Office365ActivityImporter only)
        if: matrix.project.name == 'WebJob.Office365ActivityImporter'
        run: |
          Copy-Item -Verbose -Force -Recurse `
          -Path "src/AnalyticsEngine/WebJob.Office365ActivityImporter/AutomationPS" `
          -Destination "${{ runner.temp }}\Office365ActivityImporter\"

      - name: Archive ${{ matrix.project.name }}
        run: |
          Remove-Item -Force -Recurse -ErrorAction SilentlyContinue "${{ runner.temp }}\AppInsightsImporter\_PublishedWebsites"
          Remove-Item -Force -Recurse -ErrorAction SilentlyContinue "${{ runner.temp }}\Office365ActivityImporter\_PublishedWebsites"
          Remove-Item -Force -Recurse -ErrorAction SilentlyContinue "${{ runner.temp }}\Website\_PublishedWebsites\Web\bin\Scripts"
          Compress-Archive -Force -Path "${{ runner.temp }}\${{ matrix.project.compressFolder }}" `
          -DestinationPath "${{ env.folder }}\${{ matrix.project.outDir }}.zip"
        env:
          folder: ${{ steps.prep.outputs.ZIPS_FOLDER }}

      # Wrap up
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          path: ${{ env.folder }}
          name: drop_${{ matrix.project.name }}
          if-no-files-found: error
        env:
          folder: ${{ steps.prep.outputs.ZIPS_FOLDER }}

  build_aitracker:
    # NPM ai tracker
    # Build:
    #   - Build AI Tracker
    # Output:
    #   - Clean AI Tracker
    #   - Zip files
    #   - Publish artifacts
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v4
      - name: Build AITracker
        run: |
          cd src/SPO/AITracker/TypeScript
          npm ci
          npm run build:prod
          cd ../..
          rm -rf AITracker/TypeScript
          zip -r AITrackerInstaller.zip AITracker
      # Wrap up
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          path: src/SPO/AITrackerInstaller.zip
          name: drop_aitracker
          if-no-files-found: error

  build_reports:
    runs-on: windows-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v4
      - name: Archive Reports
        run: |
          Get-ChildItem '.\reports\Usage Analytics\*' `
          -Exclude "*_base.pbit" -Include "*.pbit","Readme.txt" | Compress-Archive `
          -Force -DestinationPath "${{ runner.temp }}\Analytics_Reports.zip"
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          path: ${{ runner.temp }}/Analytics_Reports.zip
          name: drop_Reports
          if-no-files-found: error

